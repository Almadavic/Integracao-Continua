name: Java CI With Maven

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven

      - name: Build ant test with Maven
        run: mvn --batch-mode package

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/test:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/test:${{ github.sha }}

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar


      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=Almadavic_Integracao-Continua \
            -Dsonar.organization=almadavic \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}


      - name: Send Notification Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: 'Build Status: ${{ job.status }}'
          body: |
            O build foi concluído com o status: ${{ job.status }}.
            Confira os detalhes no [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          to: ${{ secrets.RECIPIENT_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}


      - name: Deploy Docker image to EC2
        env:
          HOST: ec2-54-242-236-21.compute-1.amazonaws.com
          USERNAME: ubuntu
          KEY: ${{ secrets.EC2_SSH_KEY }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ssh -o StrictHostKeyChecking=no -i $KEY $USERNAME@$HOST << EOF
            sudo docker pull $DOCKER_HUB_USERNAME/test:$IMAGE_TAG
            sudo docker stop test_container || true
            sudo docker rm test_container || true
            sudo docker run -d --name test_container -p 80:80 $DOCKER_HUB_USERNAME/test:$IMAGE_TAG
          EOF   
